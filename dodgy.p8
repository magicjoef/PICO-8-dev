pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
function _init()
	make_player()
	make_enemies()
	make_gate()
	rnd_rocks()
	rnd_flowers()
end


function _update()
	if game_over==false then
 	anim_loop_adv()
 	player_anim()
 	move_player()
 	flag_player_move()
 	move_enemies()
 	bounce_enemies()
 	detect_col_pe() --player/enemy
 	detect_col_er() --enemy/rock
 	detect_col_pr() --player/rock
 	reach_gate()
	end
end


function _draw()
 cls()
 draw_map()
 draw_gate()
	draw_player()
	draw_enemies()
	draw_rocks()
	draw_flowers()
	messages()
	show_debug()
end

-->8
--player
function make_player()
	player={}
	player.x=63
	player.y=120
	player.w=8
	player.h=8
	player.speed=2
	player.dirx="n"
	player.diry="n"
	player.stun=false
	player.cur_spr=1
	player.is_moving=false
end


function move_player()
	--includes boundary check
	if btn(1) then
		if player.x<120 then
			player.x+=player.speed
			player.dirx="r"
		end
	end
	if btn(0) then
		if player.x>0 then
			player.x-=player.speed
			player.dirx="l"
		end
	end
	if btn(2) then
		if player.y>0 then
			player.y-=player.speed
			player.diry="u"
		end
	end
	if btn(3) then
		if player.y<120 then
			player.y+=player.speed
			player.diry="d"
		end
	end
end


function flag_player_move()
 if btn(0)
 		or btn(1)
 		or btn(2)
 		or btn(3) then
 	player.is_moving=true
 else
 	player.is_moving=false
 end
end


function player_anim()
	if player.is_moving==false then
  if anim_loop==0
  	or anim_loop==13 then
   	player.cur_spr=1
  end
  if anim_loop==7
  	or anim_loop==22 then
   	player.cur_spr=2
  end
 else
   if anim_loop==0
   	or anim_loop==13 then
    	player.cur_spr=3
   end
   if anim_loop==7
   	or anim_loop==22 then
    	player.cur_spr=4
   end
 end
end


function draw_player()
	 spr(player.cur_spr, player.x, player.y)
end

-->8
--map
function draw_map()
	rectfill(0,0,127,127,5)
	map(0,0,0,0,16,8)
	map(0,0,0,64,16,8)
end

-->8
--game
level=3
game_over=false
anim_loop=0
escaped=false


function anim_loop_adv()
 --time to base player animation
 if anim_loop<29 then
 	anim_loop+=1
 else
 	anim_loop=0
 end
end


function make_gate()
	gate={}
	gate.x=59
	gate.y=0
	gate.width=10
	gate.height=4
end
function draw_gate()
	rectfill(gate.x,
										gate.y,
										gate.x+gate.width,
										gate.y+gate.height,
										4)
end


function reach_gate()
	if player.x>=53
		and player.x<=69
		and player.y<=4 then
			escaped=true
			game_over=true
	end
end


function detect_col(a,b)
	if a.x < b.x + b.w and
   	a.x + b.w > b.x and
   	a.y < b.y + b.h and
   	a.y + b.h > b.y then
    	return true
	end
end
function detect_col_pe()
 for key, enemy in pairs(enemies) do
 	if detect_col(player,enemy) then
 		eaten=true
 		game_over=true
 	end
 end
end


function messages()
	if escaped then
		print("phew! you made it âŒ‚",22,70,6)
	end
	if eaten then
		print("eaten by a mouse.",35,50,6)
		print("		what a way to go!",27,60,6)
	end
end


flower_count=0
max_flowers=flr(rnd(4))
flowers={}
function rnd_flowers()
	while flower_count<max_flowers do
 	flower={}
 	flower.x=flr(rnd(119))
  flower.y=flr(rnd(80))
  flower.w=8
  flower.h=8
  flower_count+=1
  add(flowers, flower)
 end
end
function draw_flowers()
	for key, flower in pairs(flowers) do
 	spr(8,flower.x,flower.y)
	end
end


rock_count=0
max_rocks=flr(rnd(4))
rocks={}
function rnd_rocks()
	while rock_count<max_rocks do
 	rock={}
 	rock.x=flr(rnd(119))
  rock.y=flr(rnd(80))
  rock.w=8
  rock.h=8
  rock_count+=1
  add(rocks, rock)
 end
end
function draw_rocks()
	for key, rock in pairs(rocks) do
 	spr(7,rock.x,rock.y)
	end
end


function detect_col_er()
 for key, enemy in pairs(enemies) do
 	for key, rock in pairs(rocks) do
  	if detect_col(enemy,rock) then
  		if enemy.dirx=="l" then
   		enemy.dirx="r"
  		elseif enemy.dirx=="r" then
   		enemy.dirx="l"
   	end
   	if enemy.diry=="u" then
   		enemy.diry="d"
   	elseif enemy.diry=="d" then
   		enemy.diry="u"
   	end
  	end
 	end
 end
end


function detect_col_pr()
	for key, rock in pairs(rocks) do
 	if detect_col(player,rock) then
 		player.stun=true
 		if btn(1) then
 			player.x-=5
 		end
 		if btn(0) then
 		 player.x+=5
 		end
 		if btn(2) then
 			player.y+=5
 		end
 		if btn(3) then
 			player.y-=5
 		end
 	end
	end
end


function show_debug()
	color(6)
	--player coords
	print("x:"..player.x,0,0,6)
	print("y:"..player.y,0,6,6)
	--game loop counter
	print("anim loop:"..anim_loop,0,12,6)
	--movement flag
	print("moving:"..(player.is_moving and "true" or "false"),0,18,6)
	print("escape:"..(escaped and "true" or "false"),0,24,6)
	print("game_over:"..(game_over and "true" or "false"),0,30,6)
 print("blocked "..(blocked and "true" or "false"),0,36,6)
	print("direction "..player.diry,0,42,6)
	print("direction "..player.dirx,0,48,6)
end

-->8
--enemies
enemy_count=0
enemies={}


function make_enemies()
	while enemy_count<level do
 	enemy={}
 	enemy.x=flr(rnd(119))
 	enemy.y=flr(rnd(40))
 	enemy.w=8
 	enemy.h=8
 	enemy.cur_spr=5
 	rnd_lr=flr(rnd(2))
 	rnd_ud=flr(rnd(2))
 	if rnd_lr==0 then
 		enemy.dirx="l"
 	else
 		enemy.dirx="r"
 	end
 	if rnd_ud==0 then
 		enemy.diry="u"
 	else
 		enemy.diry="d"
 	end
 	enemy.speed="1"
 	--add enemy to count
 	enemy_count+=1
 	--add to enemies object
 	add(enemies, enemy)
	end
end


function move_enemies()
 	for key, enemy in pairs(enemies) do
  	if enemy.dirx=="r" then
  		enemy.x+=enemy.speed
  	end
  	if enemy.dirx=="l" then
  		enemy.x-=enemy.speed
  	end
  	if enemy.diry=="d" then
  		enemy.y+=enemy.speed
  	end
  	if enemy.diry=="u" then
  		enemy.y-=enemy.speed
  	end
 	end
end


function bounce_enemies()
	for key, enemy in pairs(enemies) do
 	if enemy.dirx=="r" and enemy.x>=120 then
 		enemy.dirx="l"
 	end
 	if enemy.dirx=="l" and enemy.x<=0 then
 		enemy.dirx="r"
 	end
 	if enemy.diry=="d" and enemy.y>=120 then
 		enemy.diry="u"
 	end
 	if enemy.diry=="u" and enemy.y<=0 then
 		enemy.diry="d"
 	end
 end
end


function draw_enemies()
	for key, enemy in pairs(enemies) do
 	spr(enemy.cur_spr,enemy.x,enemy.y)
	end
end

-->8
--todo

--stun state, 2 seconds?

--stun state animation

--check mice and rocks don't
--clash / get stuck

--sound!

--title screen

--load new levels when goal reached

--better fence graphic

--better hit boxes needed
--define them as an attribute?
--maybe better to do maths
--in col detection

--animate enemies
__gfx__
000000000005500000000000000550f00f055000000000000000000000055500000aaa0000000000000000000000000000000000000000000000000000000000
00000000000ff00000055000000ff020020ff00000000000000000000055555000aaaaa000000000000000000000000000000000000000000000000000000000
0070070000222200000ff000022222200222222000e6660000e666000565555000aa9aa000000000000000000000000000000000000000000000000000000000
00077000020220200022220002022000000220200e6666a60e6666a60555665000aaaaa000000000000000000000000000000000000000000000000000000000
0007700002044020020220200f044000000440f0e0666666e066666655555655000aaa0000000000000000000000000000000000000000000000000000000000
007007000f0cc0f002044020000ccc0000ccc0000006006000600600555555550000b00000000000000000000000000000000000000000000000000000000000
00000000000cc0000f0cc0f0000c0c0000c0c00000000000000000005655555500b0b0b000000000000000000000000000000000000000000000000000000000
0000000000044000000440000004040000404000000000000000000055555555000bbb0000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
8080808080808080808080808080808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8080808080808080808080808080808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8080808080808080808080808080808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8080808080808080808080808080808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8080808080808080808080808080808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8080808080808080808080808080808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8080808080808080808080808080808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8080808080808080808080808080808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
8080808080808080808080808080808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
